#!/usr/bin/env python
"""
Write a single column model input file as would be generated by the
OpenIFS SCMTileRunner class.

"""
from argparse import ArgumentParser
import sys

from scmtiles.config import SCMTilesConfig
from scmtiles.exceptions import ConfigurationError, TileInitializationError
from scmtiles.grid_manager import LinearTile

from openifs_scm import SCMTileRunner


def construct_tile(cell_indices, xsize, ysize):
    linear_cell_index = cell_indices[1] * xsize + cell_indices[0]
    tile = LinearTile(0, slice(linear_cell_index, linear_cell_index + 1),
                      [cell_indices[0]], [cell_indices[1]])
    return tile


def main(argv=None):
    if argv is None:
        argv = sys.argv
    ap = ArgumentParser(description=__doc__)
    ap.add_argument('-c', '--cell', type=int, nargs=2,
                    help='the x and y index of the required cell')
    ap.add_argument('-o', '--output_directory', type=str,
                    help='directory to write the output in')
    ap.add_argument('config_file_path', type=str,
                    help='path to the program configuration file')
    argns = ap.parse_args(argv[1:])
    try:
        config = SCMTilesConfig.from_file(argns.config_file_path)
        cell = argns.cell or [0, 0]
        tile = construct_tile(cell, config.xsize, config.ysize)
        tr = SCMTileRunner(config, tile)
        cell = next(tile.cells())
        output_directory = argns.output_directory or '.'
        tr.write_scm_input(cell, output_directory)
    except (ConfigurationError, TileInitializationError) as e:
        print("error: {!s}".format(e), file=sys.stderr)
        return 1
    return 0


if __name__ == '__main__':
    sys.exit(main())
